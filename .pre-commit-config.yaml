# Pre-commit hooks for automated validation and quality checks
# Ensures code quality before commits are made

repos:
  # ========================================
  # PYTHON CODE QUALITY
  # ========================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Remove trailing whitespace
        description: Remove trailing whitespace from all files
        entry: trailing-whitespace
        language: system
        types: [text]

      - id: end-of-file-fixer
        name: Fix end of file
        description: Ensure files end with a newline
        entry: end-of-file-fixer
        language: system
        types: [text]

      - id: check-yaml
        name: Check YAML syntax
        description: Validate YAML file syntax
        entry: check-yaml
        language: system
        files: \.(yaml|yml)$

      - id: check-json
        name: Check JSON syntax
        description: Validate JSON file syntax
        entry: check-json
        language: system
        files: \.(json)$

      - id: check-merge-conflict
        name: Check for merge conflicts
        description: Check for merge conflict markers
        entry: check-merge-conflict
        language: system

      - id: check-added-large-files
        name: Check for large files
        description: Prevent large files from being committed
        entry: check-added-large-files
        language: system

      - id: check-case-conflict
        name: Check case conflicts
        description: Check for files with case conflicts
        entry: check-case-conflict
        language: system

      - id: mixed-line-ending
        name: Fix mixed line endings
        description: Normalize line endings
        entry: mixed-line-ending
        language: system
        fix: true

  # ========================================
  # PYTHON SPECIFIC HOOKS
  # ========================================
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        name: Format Python code
        description: Format Python code with Black
        entry: black
        language: python
        types: [python]
        args: [--line-length=120]

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: Sort Python imports
        description: Sort Python imports with isort
        entry: isort
        language: python
        types: [python]
        args: [--profile=black, --line-length=120]

  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        name: Check Python style
        description: Check Python code style with flake8
        entry: flake8
        language: python
        types: [python]
        args: [--max-line-length=120, --extend-ignore=E203,W503]
        exclude: ^(venv|env|__pycache__|build|dist)/

  # ========================================
  # DOCKER SPECIFIC HOOKS
  # ========================================
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        name: Lint Dockerfiles
        description: Lint Dockerfiles with hadolint
        entry: hadolint
        language: system
        files: Dockerfile$
        args: [--ignore=DL3008, --ignore=DL3018, --ignore=DL4006]

  # ========================================
  # CUSTOM VALIDATION HOOKS
  # ========================================
  - repo: local
    hooks:
      # Port configuration validation
      - id: validate-ports
        name: Validate port configurations
        description: Validate Docker port configurations
        entry: python3 scripts/hardening/docker_standardization.py
        language: system
        files: docker-compose.*\.yml$
        pass_filenames: false

      # Environment variable validation
      - id: validate-env
        name: Validate environment variables
        description: Validate environment variable configurations
        entry: python3 scripts/hardening/environment_validator.py
        language: system
        files: docker-compose.*\.yml$
        pass_filenames: false

      # Syntax validation for our scripts
      - id: validate-scripts
        name: Validate custom scripts
        description: Validate our hardening scripts syntax
        entry: python3 -m py_compile
        language: system
        files: scripts/hardening/.*\.py$
        pass_filenames: true

      # Dockerfile validation
      - id: validate-dockerfiles
        name: Validate Dockerfiles
        description: Validate Dockerfile configurations
        entry: python3 scripts/hardening/dockerfile_validator.py
        language: system
        files: Dockerfile$
        pass_filenames: false

  # ========================================
  # SHELL SCRIPT VALIDATION
  # ========================================
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        name: Check shell scripts
        description: Check shell script syntax and style
        entry: shellcheck
        language: python
        types: [shell]
        args: [--severity=warning]

# ========================================
# CONFIGURATION
# ========================================
# Files to exclude from pre-commit checks
exclude: |
  (?x)^(
      \.git/
    | __pycache__/
    | \.pytest_cache/
    | build/
    | dist/
    | \.venv/
    | venv/
    | env/
    | \.tox/
    | \.eggs/
    | \.cache/
    | \.mypy_cache/
    | \.DS_Store
    | \.vscode/
    | \.idea/
    | ecosystem_audit_results\.json
    | dockerfile_analysis_report\.json
    | port_analysis_report\.json
    | environment_analysis_report\.json
    | dependency_graph\.json
    | .*report\.md$
    | .*report\.txt$
    | .*\.sh$
  )$

# Only run on changed files for faster feedback
default_stages: [commit]

# Fail fast to give quick feedback
fail_fast: true

# ========================================
# CI INTEGRATION
# ========================================
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
