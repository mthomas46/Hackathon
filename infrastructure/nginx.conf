# Nginx configuration for load balancing the documentation consistency ecosystem
# This provides load balancing, health checks, and SSL termination

upstream orchestrator_backend {
    least_conn;
    server orchestrator:5099 max_fails=3 fail_timeout=30s;
    # Add more orchestrator instances for high availability
    # server orchestrator-2:5099 max_fails=3 fail_timeout=30s;
    # server orchestrator-3:5099 max_fails=3 fail_timeout=30s;
}

upstream reporting_backend {
    least_conn;
    server reporting:5030 max_fails=3 fail_timeout=30s;
    # Add more reporting instances for high availability
    # server reporting-2:5030 max_fails=3 fail_timeout=30s;
}

upstream consistency_engine_backend {
    least_conn;
    server consistency-engine:5020 max_fails=3 fail_timeout=30s;
    # Add more consistency-engine instances for high availability
    # server consistency-engine-2:5020 max_fails=3 fail_timeout=30s;
}

upstream doc_store_backend {
    least_conn;
    server doc-store:5040 max_fails=3 fail_timeout=30s;
    # Add more doc-store instances for high availability
    # server doc-store-2:5040 max_fails=3 fail_timeout=30s;
}

upstream frontend_backend {
    least_conn;
    server frontend:5050 max_fails=3 fail_timeout=30s;
    # Add more frontend instances for high availability
    # server frontend-2:5050 max_fails=3 fail_timeout=30s;
}

# Health check endpoint for load balancer
upstream health_backend {
    server orchestrator:5099;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=reports:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=ingestion:10m rate=2r/s;

# Main server block
server {
    listen 80;
    server_name localhost;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # CORS headers for API access
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Correlation-ID" always;
    
    # Handle preflight requests
    location / {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Correlation-ID";
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://health_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Correlation-ID $http_x_correlation_id;
        
        # Health check specific settings
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # Orchestrator API
    location /orchestrator/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://orchestrator_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Correlation-ID $http_x_correlation_id;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Retry settings
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
    }
    
    # Reporting API
    location /reporting/ {
        limit_req zone=reports burst=10 nodelay;
        
        proxy_pass http://reporting_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Correlation-ID $http_x_correlation_id;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Retry settings
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 15s;
    }
    
    # Consistency Engine API
    location /consistency-engine/ {
        limit_req zone=api burst=15 nodelay;
        
        proxy_pass http://consistency_engine_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Correlation-ID $http_x_correlation_id;
        
        # Timeout settings
        proxy_connect_timeout 45s;
        proxy_send_timeout 45s;
        proxy_read_timeout 45s;
        
        # Retry settings
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 12s;
    }
    
    # Doc Store API
    location /doc-store/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://doc_store_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Correlation-ID $http_x_correlation_id;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Retry settings
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
    }
    
    # Frontend
    location / {
        proxy_pass http://frontend_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Correlation-ID $http_x_correlation_id;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Retry settings
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
    }
    
    # Ingestion endpoints (higher rate limits)
    location /ingest/ {
        limit_req zone=ingestion burst=5 nodelay;
        
        proxy_pass http://orchestrator_backend/ingest/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Correlation-ID $http_x_correlation_id;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Retry settings
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 20s;
    }
    
    # Webhook endpoints (special handling)
    location /webhooks/ {
        limit_req zone=api burst=50 nodelay;
        
        proxy_pass http://orchestrator_backend/webhooks/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Correlation-ID $http_x_correlation_id;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Retry settings
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 10s;
    }
    
    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# SSL configuration (uncomment for production)
# server {
#     listen 443 ssl http2;
#     server_name localhost;
#     
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#     
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     
#     # Include the same location blocks as above
# }
