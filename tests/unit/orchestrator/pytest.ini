[tool:pytest]
# Orchestrator service test configuration
testpaths = .
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts =
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    -ra
    --maxfail=5
    # Enable parallel execution
    -n auto
    # Enable coverage for orchestrator service
    --cov=services.orchestrator
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80

markers =
    # Test type markers
    unit: Unit tests for individual components
    integration: Integration tests across components
    e2e: End-to-end tests
    slow: Long-running tests

    # Bounded context markers
    workflow_management: Workflow management bounded context tests
    health_monitoring: Health monitoring bounded context tests
    infrastructure: Infrastructure bounded context tests
    ingestion: Ingestion bounded context tests
    service_registry: Service registry bounded context tests
    query_processing: Query processing bounded context tests
    reporting: Reporting bounded context tests

    # Architectural layer markers
    domain: Domain layer tests
    application: Application layer tests
    infrastructure: Infrastructure layer tests
    presentation: Presentation layer tests

    # Test execution markers
    parallel_safe: Tests that can run in parallel
    sequential_only: Tests that must run sequentially
    external_deps: Tests that require external dependencies

filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning

# Test execution configuration
asyncio_mode = strict
asyncio_default_fixture_loop_scope = function

# Coverage configuration
[coverage:run]
source = services/orchestrator
omit =
    */tests/*
    */venv/*
    */__pycache__/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
